#################################################################################
# sbt scripted plugin testing syntax conventions:
# #                      ==> starts a one-line comment
# > {sbt command}        ==> sends a task to sbt (and tests if it succeeds)
# -> {sbt command}       ==> sends a task to sbt, but expects it to fail
# $ {file command} arg*  ==> performs a file command (and tests if it succeeds)
# -$ {file command} arg* ==> performs a file command, but expects it to fail
# File commands are:
# touch path+               ==> creates or updates the timestamp on the files
# delete path+              ==> deletes the files
# exists path+              ==> checks if the files exist
# mkdir path+               ==> creates dirs
# absent path+              ==> checks if the files donâ€™t exist
# newer source target       ==> checks if source is newer
# must-mirror source target ==> checks if source is identical to target
# pause                     ==> pauses until enter is pressed
# sleep time                ==> sleeps (in milliseconds)
# exec command args*        ==> runs the command in another process
# copy-file fromPath toPath ==> copies the file
# copy fromPath+ toDir      ==> copies the paths to toDir preserving relative structure
# copy-flat fromPath+ toDir ==> copies the paths to toDir flat
#################################################################################
# Initial commit with no pattern in commit message, then sample.txt with pattern in commit message (this
# will be treated as patch version), then commit another file with "[minor]" pattern
# final version will be 0.2.1, patch version will take precedence
$ exec git init .
> update
$ exec git add .
$ exec git commit -m "initial commit"
> compile
> release with-defaults
$ touch sample.txt
$ exec git add sample.txt
$ exec git commit -m "with no pattern in commit message"
$ touch sample2.txt
$ exec git add sample2.txt
$ exec git commit -m "with [minor] update"
> release with-defaults
> checkContentsOfVersionSbt 0.2.1
